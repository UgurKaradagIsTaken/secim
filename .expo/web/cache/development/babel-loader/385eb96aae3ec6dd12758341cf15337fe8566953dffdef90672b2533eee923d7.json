{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { DevToolsPluginClient, DevToolsPluginMethod, MESSAGE_PROTOCOL_VERSION } from './DevToolsPluginClient';\nimport * as logger from './logger';\nexport var DevToolsPluginClientImplBrowser = function (_DevToolsPluginClient) {\n  _inherits(DevToolsPluginClientImplBrowser, _DevToolsPluginClient);\n  function DevToolsPluginClientImplBrowser() {\n    var _this;\n    _classCallCheck(this, DevToolsPluginClientImplBrowser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, DevToolsPluginClientImplBrowser, [].concat(args));\n    _this.ws = null;\n    _this.browserClientId = Date.now().toString();\n    return _this;\n  }\n  _createClass(DevToolsPluginClientImplBrowser, [{\n    key: \"initAsync\",\n    value: (function () {\n      var _initAsync = _asyncToGenerator(function* () {\n        if (this.ws == null) {\n          var ws = yield this.connectAsync();\n          this.ws = ws;\n        }\n        this.ws.addEventListener('message', this.handleMessage);\n        this.startHandshake();\n      });\n      function initAsync() {\n        return _initAsync.apply(this, arguments);\n      }\n      return initAsync;\n    }())\n  }, {\n    key: \"closeAsync\",\n    value: (function () {\n      var _closeAsync = _asyncToGenerator(function* () {\n        var _this$ws, _this$ws2;\n        (_this$ws = this.ws) == null ? void 0 : _this$ws.removeEventListener('message', this.handleMessage);\n        (_this$ws2 = this.ws) == null ? void 0 : _this$ws2.close();\n        this.ws = null;\n        this.eventEmitter.removeAllListeners();\n      });\n      function closeAsync() {\n        return _closeAsync.apply(this, arguments);\n      }\n      return closeAsync;\n    }())\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(method, params, pluginNamespace) {\n      var _this$ws3;\n      if (!this.isConnected()) {\n        throw new Error('Unable to send message in a disconnected state.');\n      }\n      var payload = {\n        version: MESSAGE_PROTOCOL_VERSION,\n        pluginName: this.connectionInfo.pluginName,\n        method: DevToolsPluginMethod,\n        params: {\n          method: method,\n          params: params\n        }\n      };\n      (_this$ws3 = this.ws) == null ? void 0 : _this$ws3.send(JSON.stringify(payload));\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      var _this$ws4;\n      return ((_this$ws4 = this.ws) == null ? void 0 : _this$ws4.readyState) === WebSocket.OPEN;\n    }\n  }, {\n    key: \"startHandshake\",\n    value: function startHandshake() {\n      var _this2 = this;\n      this.addMessageListener('terminateBrowserClient', function (params) {\n        if (_this2.browserClientId !== params.browserClientId) {\n          return;\n        }\n        logger.info('Received terminateBrowserClient messages and terminate the current connection');\n        _this2.closeAsync();\n      });\n      this.sendMessage('handshake', {\n        browserClientId: this.browserClientId,\n        pluginName: this.connectionInfo.pluginName\n      });\n    }\n  }, {\n    key: \"connectAsync\",\n    value: function () {\n      var _connectAsync = _asyncToGenerator(function* () {\n        var _this3 = this;\n        return new Promise(function (resolve, reject) {\n          var ws = new WebSocket(`ws://${_this3.connectionInfo.devServer}/message`);\n          ws.addEventListener('open', function () {\n            resolve(ws);\n          });\n          ws.addEventListener('error', function (e) {\n            reject(e);\n          });\n          ws.addEventListener('close', function (e) {\n            logger.info('WebSocket closed', e.code, e.reason);\n            _this3.ws = null;\n          });\n        });\n      });\n      function connectAsync() {\n        return _connectAsync.apply(this, arguments);\n      }\n      return connectAsync;\n    }()\n  }]);\n  return DevToolsPluginClientImplBrowser;\n}(DevToolsPluginClient);","map":{"version":3,"names":["DevToolsPluginClient","DevToolsPluginMethod","MESSAGE_PROTOCOL_VERSION","logger","DevToolsPluginClientImplBrowser","_DevToolsPluginClient","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","ws","browserClientId","Date","now","toString","_createClass","key","value","_initAsync","_asyncToGenerator","connectAsync","addEventListener","handleMessage","startHandshake","initAsync","apply","_closeAsync","_this$ws","_this$ws2","removeEventListener","close","eventEmitter","removeAllListeners","closeAsync","sendMessage","method","params","pluginNamespace","_this$ws3","isConnected","Error","payload","version","pluginName","connectionInfo","send","JSON","stringify","_this$ws4","readyState","WebSocket","OPEN","_this2","addMessageListener","info","_connectAsync","_this3","Promise","resolve","reject","devServer","e","code","reason"],"sources":["/Users/yavuzceliker/Desktop/projects/yavuz/react/qr4car/mobile/node_modules/expo/src/devtools/DevToolsPluginClientImplBrowser.ts"],"sourcesContent":["import {\n  DevToolsPluginClient,\n  DevToolsPluginMethod,\n  MESSAGE_PROTOCOL_VERSION,\n} from './DevToolsPluginClient';\nimport * as logger from './logger';\n\n/**\n * The DevToolsPluginClient for the browser -> app communication.\n */\nexport class DevToolsPluginClientImplBrowser extends DevToolsPluginClient {\n  private ws: WebSocket | null = null;\n  private browserClientId: string = Date.now().toString();\n\n  /**\n   * Initialize the connection.\n   * @hidden\n   */\n  override async initAsync(): Promise<void> {\n    if (this.ws == null) {\n      const ws = await this.connectAsync();\n      this.ws = ws;\n    }\n    this.ws.addEventListener('message', this.handleMessage);\n    this.startHandshake();\n  }\n\n  /**\n   * Close the connection.\n   */\n  override async closeAsync(): Promise<void> {\n    this.ws?.removeEventListener('message', this.handleMessage);\n    this.ws?.close();\n    this.ws = null;\n    this.eventEmitter.removeAllListeners();\n  }\n\n  /**\n   * Send a message to the other end of DevTools.\n   * @param method A method name.\n   * @param params any extra payload.\n   */\n  override sendMessage(method: string, params: any, pluginNamespace?: string): void {\n    if (!this.isConnected()) {\n      throw new Error('Unable to send message in a disconnected state.');\n    }\n\n    const payload: Record<string, any> = {\n      version: MESSAGE_PROTOCOL_VERSION,\n      pluginName: this.connectionInfo.pluginName,\n      method: DevToolsPluginMethod,\n      params: {\n        method,\n        params,\n      },\n    };\n    this.ws?.send(JSON.stringify(payload));\n  }\n\n  /**\n   * Returns whether the client is connected to the server.\n   */\n  override isConnected(): boolean {\n    return this.ws?.readyState === WebSocket.OPEN;\n  }\n\n  private startHandshake() {\n    this.addMessageListener('terminateBrowserClient', (params) => {\n      if (this.browserClientId !== params.browserClientId) {\n        return;\n      }\n      logger.info('Received terminateBrowserClient messages and terminate the current connection');\n      this.closeAsync();\n    });\n    this.sendMessage('handshake', {\n      browserClientId: this.browserClientId,\n      pluginName: this.connectionInfo.pluginName,\n    });\n  }\n\n  private async connectAsync(): Promise<WebSocket> {\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(`ws://${this.connectionInfo.devServer}/message`);\n      ws.addEventListener('open', () => {\n        resolve(ws);\n      });\n      ws.addEventListener('error', (e) => {\n        reject(e);\n      });\n      ws.addEventListener('close', (e: WebSocketCloseEvent) => {\n        logger.info('WebSocket closed', e.code, e.reason);\n        this.ws = null;\n      });\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}