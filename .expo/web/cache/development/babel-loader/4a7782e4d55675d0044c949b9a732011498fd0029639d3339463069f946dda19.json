{"ast":null,"code":"var isExisty = function isExisty(value) {\n  return value !== null && value !== undefined;\n};\nvar isEmpty = function isEmpty(value) {\n  if (value instanceof Array) {\n    return value.length === 0;\n  }\n  return value === '' || !isExisty(value);\n};\nvar isEmptyTrimed = function isEmptyTrimed(value) {\n  if (typeof value === 'string') {\n    return value.trim() === '';\n  }\n  return true;\n};\nvar validations = {\n  matchRegexp: function matchRegexp(value, regexp) {\n    var validationRegexp = regexp instanceof RegExp ? regexp : new RegExp(regexp);\n    return isEmpty(value) || validationRegexp.test(value);\n  },\n  isEmail: function isEmail(value) {\n    return validations.matchRegexp(value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n  },\n  required: function required(value) {\n    if (typeof value === 'string' || value instanceof String) {\n      return !isEmpty(value) && value != \"[]\" && value.replace(/\\s/g, '').length !== 0;\n    } else return !isEmpty(value);\n  },\n  isNumber: function isNumber(value) {\n    return validations.matchRegexp(value, /^\\d+$/);\n  },\n  maxNumber: function maxNumber(value, max) {\n    return isEmpty(value) || parseInt(value, 10) <= parseInt(max, 10);\n  },\n  areEqual: function areEqual(value, otherValue) {\n    return isEmpty(value) || value == otherValue;\n  },\n  minNumber: function minNumber(value, min) {\n    return isEmpty(value) || parseInt(value, 10) >= parseInt(min, 10);\n  },\n  minStringLength: function minStringLength(value, length) {\n    return (value + \"\").length >= length;\n  },\n  maxStringLength: function maxStringLength(value, length) {\n    return (value + \"\").length <= length;\n  }\n};\nvar messages = {\n  isEmail: function isEmail(value) {\n    return \"Email adresi geçersiz\";\n  },\n  required: function required(value) {\n    return \"Bu alan zorunludur\";\n  },\n  trim: function trim(value) {\n    return !isEmptyTrimed(value);\n  },\n  isNumber: function isNumber(value) {\n    return \"Numara giriniz\";\n  },\n  maxNumber: function maxNumber(value, max) {\n    return \"Değer [max] değerinden büyük olamaz\".replace(\"[max]\", max);\n  },\n  minNumber: function minNumber(value, min) {\n    return \"Değer [min] değerinden küçük olamaz\".replace(\"[min]\", min);\n  },\n  minStringLength: function minStringLength(value, length) {\n    return \"En az [length] karakter olmalıdır\".replace(\"[length]\", length);\n  },\n  maxStringLength: function maxStringLength(value, length) {\n    return \"En fazla [length] karakter olmalıdır\".replace(\"[length]\", length);\n  },\n  areEqual: function areEqual(value, otherValue) {\n    return \"Değerler eşleşmiyor\";\n  }\n};\nmodule.exports = {\n  ValidationRules: validations,\n  ValidationMessages: messages\n};","map":{"version":3,"names":["isExisty","value","undefined","isEmpty","Array","length","isEmptyTrimed","trim","validations","matchRegexp","regexp","validationRegexp","RegExp","test","isEmail","required","String","replace","isNumber","maxNumber","max","parseInt","areEqual","otherValue","minNumber","min","minStringLength","maxStringLength","messages","module","exports","ValidationRules","ValidationMessages"],"sources":["/Users/yavuzceliker/Desktop/projects/yavuz/react/qr4car/mobile/app/infrastructure/validator/validation-rules.js"],"sourcesContent":["\nconst isExisty = function (value) {\n    return value !== null && value !== undefined;\n};\n\nconst isEmpty = function (value) {\n    if (value instanceof Array) {\n        return value.length === 0;\n    }\n    return value === '' || !isExisty(value);\n};\n\nconst isEmptyTrimed = function (value) {\n    if (typeof value === 'string') {\n        return value.trim() === '';\n    }\n    return true;\n};\n\nconst validations = {\n    matchRegexp: (value, regexp) => {\n        const validationRegexp = (regexp instanceof RegExp ? regexp : (new RegExp(regexp)));\n        return (isEmpty(value) || validationRegexp.test(value));\n    },\n\n    isEmail: value => validations.matchRegexp(value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i),\n\n    required: value => {\n        if (typeof value === 'string' || value instanceof String) {\n            // alert(value.replace(/\\s/g, '').length);\n\n            return (!isEmpty(value) && value != \"[]\" && (value.replace(/\\s/g, '').length !== 0));\n        }\n        else\n            return !isEmpty(value);\n\n    },\n\n    isNumber: value => validations.matchRegexp(value, /^\\d+$/),\n\n    maxNumber: (value, max) => isEmpty(value) || parseInt(value, 10) <= parseInt(max, 10),\n\n    areEqual: (value, otherValue) => isEmpty(value) || value == otherValue,\n\n    minNumber: (value, min) => isEmpty(value) || parseInt(value, 10) >= parseInt(min, 10),\n\n    minStringLength: (value, length) => (value + \"\").length >= length,\n\n    maxStringLength: (value, length) => (value + \"\").length <= length,\n};\n\nconst messages = {\n    isEmail: value => (\"Email adresi geçersiz\"),\n    required: value => (\"Bu alan zorunludur\"),\n    trim: value => !isEmptyTrimed(value),\n    isNumber: value => (\"Numara giriniz\"),\n    maxNumber: (value, max) => (\"Değer [max] değerinden büyük olamaz\").replace(\"[max]\", max),\n    minNumber: (value, min) => (\"Değer [min] değerinden küçük olamaz\").replace(\"[min]\", min),\n    minStringLength: (value, length) => (\"En az [length] karakter olmalıdır\").replace(\"[length]\", length),\n    maxStringLength: (value, length) => (\"En fazla [length] karakter olmalıdır\").replace(\"[length]\", length),\n    areEqual: (value, otherValue) => (\"Değerler eşleşmiyor\"),\n}\n\nmodule.exports = {\n    ValidationRules: validations,\n    ValidationMessages: messages\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}