{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { DevToolsPluginClient, DevToolsPluginMethod, MESSAGE_PROTOCOL_VERSION } from './DevToolsPluginClient';\nimport * as logger from './logger';\nexport var DevToolsPluginClientImplApp = function (_DevToolsPluginClient) {\n  _inherits(DevToolsPluginClientImplApp, _DevToolsPluginClient);\n  function DevToolsPluginClientImplApp() {\n    var _this;\n    _classCallCheck(this, DevToolsPluginClientImplApp);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, DevToolsPluginClientImplApp, [].concat(args));\n    _this.browserClientMap = {};\n    return _this;\n  }\n  _createClass(DevToolsPluginClientImplApp, [{\n    key: \"initAsync\",\n    value: (function () {\n      var _initAsync = _asyncToGenerator(function* () {\n        if (DevToolsPluginClientImplApp.ws == null) {\n          DevToolsPluginClientImplApp.ws = yield this.connectAsync();\n        }\n        DevToolsPluginClientImplApp.refCount += 1;\n        DevToolsPluginClientImplApp.ws.addEventListener('message', this.handleMessage);\n        this.addHandshakeHandler();\n      });\n      function initAsync() {\n        return _initAsync.apply(this, arguments);\n      }\n      return initAsync;\n    }())\n  }, {\n    key: \"closeAsync\",\n    value: (function () {\n      var _closeAsync = _asyncToGenerator(function* () {\n        var _DevToolsPluginClient2;\n        this.eventEmitter.removeAllListeners();\n        (_DevToolsPluginClient2 = DevToolsPluginClientImplApp.ws) == null ? void 0 : _DevToolsPluginClient2.removeEventListener('message', this.handleMessage);\n        DevToolsPluginClientImplApp.refCount -= 1;\n        if (DevToolsPluginClientImplApp.refCount < 1) {\n          var _DevToolsPluginClient3;\n          (_DevToolsPluginClient3 = DevToolsPluginClientImplApp.ws) == null ? void 0 : _DevToolsPluginClient3.close();\n          DevToolsPluginClientImplApp.ws = null;\n        }\n      });\n      function closeAsync() {\n        return _closeAsync.apply(this, arguments);\n      }\n      return closeAsync;\n    }())\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(method, params) {\n      var _DevToolsPluginClient4;\n      if (!this.isConnected()) {\n        throw new Error('Unable to send message in a disconnected state.');\n      }\n      var payload = {\n        version: MESSAGE_PROTOCOL_VERSION,\n        pluginName: this.connectionInfo.pluginName,\n        method: DevToolsPluginMethod,\n        params: {\n          method: method,\n          params: params\n        }\n      };\n      (_DevToolsPluginClient4 = DevToolsPluginClientImplApp.ws) == null ? void 0 : _DevToolsPluginClient4.send(JSON.stringify(payload));\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      var _DevToolsPluginClient5;\n      return ((_DevToolsPluginClient5 = DevToolsPluginClientImplApp.ws) == null ? void 0 : _DevToolsPluginClient5.readyState) === WebSocket.OPEN;\n    }\n  }, {\n    key: \"connectAsync\",\n    value: function () {\n      var _connectAsync = _asyncToGenerator(function* () {\n        var _this2 = this;\n        return new Promise(function (resolve, reject) {\n          var ws = new WebSocket(`ws://${_this2.connectionInfo.devServer}/message`);\n          ws.addEventListener('open', function () {\n            resolve(ws);\n          });\n          ws.addEventListener('error', function (e) {\n            reject(e);\n          });\n          ws.addEventListener('close', function (e) {\n            logger.info('WebSocket closed', e.code, e.reason);\n            DevToolsPluginClientImplApp.ws = null;\n          });\n        });\n      });\n      function connectAsync() {\n        return _connectAsync.apply(this, arguments);\n      }\n      return connectAsync;\n    }()\n  }, {\n    key: \"addHandshakeHandler\",\n    value: function addHandshakeHandler() {\n      var _this3 = this;\n      this.addMessageListener('handshake', function (params) {\n        var previousBrowserClientId = _this3.browserClientMap[params.pluginName];\n        if (previousBrowserClientId != null && previousBrowserClientId !== params.browserClientId) {\n          logger.info(`Terminate the previous browser client connection - previousBrowserClientId[${previousBrowserClientId}]`);\n          _this3.sendMessage('terminateBrowserClient', {\n            browserClientId: previousBrowserClientId\n          });\n        }\n        _this3.browserClientMap[params.pluginName] = params.browserClientId;\n      });\n    }\n  }], [{\n    key: \"getWebSocket\",\n    value: function getWebSocket() {\n      return DevToolsPluginClientImplApp.ws;\n    }\n  }, {\n    key: \"getRefCount\",\n    value: function getRefCount() {\n      return DevToolsPluginClientImplApp.refCount;\n    }\n  }]);\n  return DevToolsPluginClientImplApp;\n}(DevToolsPluginClient);\nDevToolsPluginClientImplApp.ws = null;\nDevToolsPluginClientImplApp.refCount = 0;","map":{"version":3,"names":["DevToolsPluginClient","DevToolsPluginMethod","MESSAGE_PROTOCOL_VERSION","logger","DevToolsPluginClientImplApp","_DevToolsPluginClient","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","browserClientMap","_createClass","key","value","_initAsync","_asyncToGenerator","ws","connectAsync","refCount","addEventListener","handleMessage","addHandshakeHandler","initAsync","apply","_closeAsync","_DevToolsPluginClient2","eventEmitter","removeAllListeners","removeEventListener","_DevToolsPluginClient3","close","closeAsync","sendMessage","method","params","_DevToolsPluginClient4","isConnected","Error","payload","version","pluginName","connectionInfo","send","JSON","stringify","_DevToolsPluginClient5","readyState","WebSocket","OPEN","_connectAsync","_this2","Promise","resolve","reject","devServer","e","info","code","reason","_this3","addMessageListener","previousBrowserClientId","browserClientId","getWebSocket","getRefCount"],"sources":["/Users/yavuzceliker/Desktop/projects/yavuz/react/qr4car/mobile/node_modules/expo/src/devtools/DevToolsPluginClientImplApp.ts"],"sourcesContent":["import {\n  DevToolsPluginClient,\n  DevToolsPluginMethod,\n  MESSAGE_PROTOCOL_VERSION,\n} from './DevToolsPluginClient';\nimport type { HandshakeMessageParams } from './devtools.types';\nimport * as logger from './logger';\n\n/**\n * The DevToolsPluginClient for the app -> browser communication.\n */\nexport class DevToolsPluginClientImplApp extends DevToolsPluginClient {\n  // Map of pluginName -> browserClientId\n  private browserClientMap: Record<string, string> = {};\n\n  private static ws: WebSocket | null = null;\n  private static refCount: number = 0;\n\n  /**\n   * Initialize the connection.\n   * @hidden\n   */\n  override async initAsync(): Promise<void> {\n    if (DevToolsPluginClientImplApp.ws == null) {\n      DevToolsPluginClientImplApp.ws = await this.connectAsync();\n    }\n    DevToolsPluginClientImplApp.refCount += 1;\n    DevToolsPluginClientImplApp.ws.addEventListener('message', this.handleMessage);\n    this.addHandshakeHandler();\n  }\n\n  /**\n   * Close the connection.\n   */\n  override async closeAsync(): Promise<void> {\n    this.eventEmitter.removeAllListeners();\n    DevToolsPluginClientImplApp.ws?.removeEventListener('message', this.handleMessage);\n    DevToolsPluginClientImplApp.refCount -= 1;\n    if (DevToolsPluginClientImplApp.refCount < 1) {\n      DevToolsPluginClientImplApp.ws?.close();\n      DevToolsPluginClientImplApp.ws = null;\n    }\n  }\n\n  /**\n   * Send a message to the other end of DevTools.\n   * @param method A method name.\n   * @param params any extra payload.\n   */\n  override sendMessage(method: string, params: any): void {\n    if (!this.isConnected()) {\n      throw new Error('Unable to send message in a disconnected state.');\n    }\n\n    const payload: Record<string, any> = {\n      version: MESSAGE_PROTOCOL_VERSION,\n      pluginName: this.connectionInfo.pluginName,\n      method: DevToolsPluginMethod,\n      params: {\n        method,\n        params,\n      },\n    };\n    DevToolsPluginClientImplApp.ws?.send(JSON.stringify(payload));\n  }\n\n  /**\n   * Returns whether the client is connected to the server.\n   */\n  override isConnected(): boolean {\n    return DevToolsPluginClientImplApp.ws?.readyState === WebSocket.OPEN;\n  }\n\n  /**\n   * Get the WebSocket instance. Exposed for testing.\n   * @hidden\n   */\n  public static getWebSocket(): WebSocket | null {\n    return DevToolsPluginClientImplApp.ws;\n  }\n\n  /**\n   * Get the current reference count. Exposed for testing.\n   * @hidden\n   */\n  public static getRefCount(): number {\n    return DevToolsPluginClientImplApp.refCount;\n  }\n\n  private async connectAsync(): Promise<WebSocket> {\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(`ws://${this.connectionInfo.devServer}/message`);\n      ws.addEventListener('open', () => {\n        resolve(ws);\n      });\n      ws.addEventListener('error', (e) => {\n        reject(e);\n      });\n      ws.addEventListener('close', (e: WebSocketCloseEvent) => {\n        logger.info('WebSocket closed', e.code, e.reason);\n        DevToolsPluginClientImplApp.ws = null;\n      });\n    });\n  }\n\n  private addHandshakeHandler() {\n    this.addMessageListener('handshake', (params: HandshakeMessageParams) => {\n      const previousBrowserClientId = this.browserClientMap[params.pluginName];\n      if (previousBrowserClientId != null && previousBrowserClientId !== params.browserClientId) {\n        logger.info(\n          `Terminate the previous browser client connection - previousBrowserClientId[${previousBrowserClientId}]`\n        );\n        this.sendMessage('terminateBrowserClient', { browserClientId: previousBrowserClientId });\n      }\n      this.browserClientMap[params.pluginName] = params.browserClientId;\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}